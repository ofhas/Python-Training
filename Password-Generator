import random

def check_if_first_digit(one):

    while one.isdigit() != True or int(one) < 1 or int(one) > 6:
        one = input("You either enter a non integer or an invalid number, please enter an integer between 1 to 6:")

    return int(one)

def check_if_legnth_digit(two):
    while two.isdigit() != True or int(two) < 1 :
        two = input("You've either entered a non integer or a number smaller than 1, please enter a correct number:")

    return int(two)

def password_generator(new_key, num_of_chars):
    if new_key == 1:
        password = random.choices("abcdefghiFG1568HIJK14124#$%^&LMNOPQ~!@*<>;'[]RSTjklmnopqrstuvW123456789~@$wABCDEUV%^&*!", k = num_of_chars)
        print("The password is:")
        print("".join(password))

    if new_key == 2:
        password = random.choices("abcdefghijklmnopABCDEFGHIJKLMNOP0123456789", k = num_of_chars)
        print("The password is:")
        print("".join(password))

    if new_key == 3:
        password = random.choices("abcdefghijklmnopqrstuvwABCDEFGHIJKLMNOPQRSTUVW", k = num_of_chars)
        print("The password is:")
        print("".join(password))

    if new_key == 4:
        password = random.choices("abcdefghijklmnopqrstuvw", k = num_of_chars)
        print("The password is:")
        print("".join(password))

    if new_key == 5:
        password = random.choices("ABCDEFGHIJKLMNOPQRSTUVW", k = num_of_chars)
        print("The password is:")
        print("".join(password))

    if new_key == 6:
        password = random.choices("0123456789", k = num_of_chars)
        print("The password is:")
        print("".join(password))

    if num_of_chars < 8:
        print("For your own sake we highly recommand that passwords will consist of at least 8 elements.")

key = input("please enter a number bewteen 1 to 6, 1 is the most complex and 6 is the least complex:")
new_key = int(check_if_first_digit(key))
num = input("Please enter the legnth of the password:")
new_num = int(check_if_legnth_digit(num))
print(new_key, new_num)
password_generator(int(new_key), int(new_num))






